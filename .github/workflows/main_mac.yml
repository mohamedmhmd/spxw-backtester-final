name: Build macOS App (.app via py2app)

on:
  workflow_dispatch: {}
  push:
    tags: ["v*"]   # build when you push a tag like v1.0.0

jobs:
  build-macos:
    runs-on: macos-14
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.13"]   # adjust if you need 3.11, etc.

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel setuptools
          pip install -r requirements.txt
          pip install py2app

      - name: Verify SciPy import
        run: python -c "import scipy,sys;print('SciPy',scipy.__version__,'Python',sys.version.split()[0])"

      # --- Fix for duplicate *.dist-info collisions ---
      # Clean previous build artifacts before each run, and exclude build-time packages (wheel/pip/setuptools)
      - name: Generate setup-mac.py (py2app)
        shell: bash
        run: |
          cat > setup-mac.py << 'PY'
          from setuptools import setup
          import os

          APP_NAME = "SPX_0DTE_Backtester"
          ENTRY = "main.py"  # change if your entry point differs
          VERSION = os.getenv("GITHUB_REF_NAME", "0.0.0").lstrip("v")

          OPTIONS = {
              "argv_emulation": False,
              "packages": [
                  "numpy","scipy","PyQt6","matplotlib","pandas","aiohttp","certifi"
              ],
              "includes": [
                  "scipy._lib.messagestream",
              ],
              # Exclude build-time tooling to avoid collecting duplicate dist-info dirs
              "excludes": [
                  "wheel","pip","setuptools",
                  "pytest","tkinter",
                  "matplotlib.tests","scipy.tests","numpy.random._examples",
              ],
              "plist": {
                  "CFBundleName": APP_NAME,
                  "CFBundleDisplayName": APP_NAME,
                  "CFBundleIdentifier": "com.yourorg." + APP_NAME.lower(),
                  "CFBundleShortVersionString": VERSION,
                  "CFBundleVersion": VERSION,
              },
              # Make a fully standalone app
              "semi_standalone": False,
              "optimize": 2,
          }

          setup(
              app=[ENTRY],
              name=APP_NAME,
              options={"py2app": OPTIONS},
          )
          PY

      - name: Build (.app via py2app)
        shell: bash
        env:
          # Keep workspace clean to prevent "File exists" errors in collect/ dirs
          PYTHONDONTWRITEBYTECODE: "1"
        run: |
          rm -rf build dist       # <-- important to avoid duplicate dist-info collisions
          python setup-mac.py py2app -O2

          APP="dist/SPX_0DTE_Backtester.app"
          [[ -d "$APP" ]] || { echo "Expected $APP but it was not found"; exit 1; }

      - name: Package .app as zip
        id: zip
        shell: bash
        run: |
          ARCH="$(uname -m)"
          APP="dist/SPX_0DTE_Backtester.app"
          ZIP="SPX_0DTE_Backtester-macOS-${ARCH}.zip"
          # Proper macOS zipping preserving resource forks
          ditto -c -k --sequesterRsrc --keepParent "$APP" "$ZIP"
          echo "zip=$ZIP"  >> $GITHUB_OUTPUT
          echo "arch=$ARCH" >> $GITHUB_OUTPUT

      - name: Upload artifact (.app.zip)
        uses: actions/upload-artifact@v4
        with:
          name: SPX_0DTE_Backtester-macOS-${{ steps.zip.outputs.arch }}-${{ matrix.python-version }}
          path: ${{ steps.zip.outputs.zip }}
          if-no-files-found: error
